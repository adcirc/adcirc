# #######################################################################
# ADCIRC CircleCI Yaml
#
# Written By: Zach Cobell
#
# Generated for: CircleCI v2.1
#
# This yaml runs a series of build tests
# and acceptance tests used to ensure the
# ADCIRC code is checked before 
# accepting code into the main branch
#
# #######################################################################
version: 2.1

# #############################
# Pipeline parameters
# #############################
parameters:
  ci-version:
    type: string
    default: "v56.0.3"

# #############################
# Executor Definitions
# #############################
executors:
  intel_executor:
    docker:
      - image: adcircorg/adcirc-ci:2025.0.1-intel
  gcc_executor:
    docker:
      - image: adcircorg/adcirc-ci:2025.0.1-gcc

# #############################
# Aliases for the environments
# #############################
default_env: &default_env
    executor: intel_executor

default_env_gcc: &default_env_gcc
    executor: gcc_executor
    environment:
      BASH_ENV: /etc/environment

# #######################################
# Jobs that will be run in the workflow
# #######################################
jobs:
  build_legacy_without_netcdf:
    <<: *default_env
    steps:
      - checkout
      - run:
          name: Configure SWAN for legacy makefile
          command: cd work && cp ../thirdparty/swan/macros.inc.gfortran ../thirdparty/swan/macros.inc
      - run:
          name: Build ADCIRC without external libraries using legacy makefile
          command: source /opt/spack-environment/activate.sh && cd work && make compiler=circleci adcirc padcirc adcprep adccmp inflate hot2asc hstime aswip p15 build13 build12 libadc adcswan padcswan

  build_legacy_with_netcdf:
    <<: *default_env
    steps:
      - checkout
      - run:
          name: Configure SWAN for legacy makefile
          command: cd work && cp ../thirdparty/swan/macros.inc.circleci ../thirdparty/swan/macros.inc
      - run:
          name: Build ADCIRC with netCDF using legacy makefile
          command: source /opt/spack-environment/activate.sh && cd work && make compiler=circleci NETCDF=enable NETCDF4=enable NETCDF4_COMPRESSION=enable NETCDFHOME=$NETCDF_FORTRAN_HOME HDF5HOME=$HDF5HOME NETCDF_C_HOME=$NETCDFHOME adcirc padcirc adcprep adccmp inflate hot2asc hstime aswip p15 build13 build12 libadc adcswan padcswan

  build_legacy_with_netcdf_and_xdmf:
    <<: *default_env
    steps:
      - checkout
      - run:
          name: Configure SWAN for legacy makefile
          command: cd work && cp ../thirdparty/swan/macros.inc.gfortran ../thirdparty/swan/macros.inc
      - run:
          name: Build ADCIRC with netCDF and XDMF using legacy makefile
          command: source /opt/spack-environment/activate.sh && cd work && make compiler=circleci NETCDF=enable NETCDF4=enable NETCDF4_COMPRESSION=enable NETCDFHOME=$NETCDF_FORTRAN_HOME HDF5HOME=$HDF5HOME NETCDF_C_HOME=$NETCDFHOME XDMF=enable XDMFHOME=$XDMFHOME adcirc padcirc adcprep adccmp inflate hot2asc hstime aswip p15 build13 build12 libadc adcswan padcswan


  build_cmake_without_netcdf_gcc:
    <<: *default_env_gcc
    steps:
      - checkout
      - run:
          name: Build ADCIRC without external libraries using CMake
          command: mkdir build && cd build && cmake .. -DBUILD_ADCIRC=ON -DBUILD_PADCIRC=ON -DBUILD_ADCSWAN=ON -DBUILD_PADCSWAN=ON -DBUILD_ADCPREP=ON -DBUILD_UTILITIES=ON -DBUILD_ASWIP=ON -DBUILD_SWAN=ON -DBUILD_PUNSWAN=ON -DBUILD_LIBADCIRC_STATIC=ON -DBUILD_LIBADCIRC_SHARED=ON -DBUILD_UTILITIES=ON &&  make -j4

  build_cmake_with_netcdf_gcc:
    <<: *default_env_gcc
    steps:
      - checkout
      - run:
          name: Build ADCIRC without external libraries using CMake
          command: mkdir build && cd build && cmake .. -DBUILD_ADCIRC=ON -DBUILD_PADCIRC=ON -DBUILD_ADCSWAN=ON -DBUILD_PADCSWAN=ON -DBUILD_ADCPREP=ON -DBUILD_UTILITIES=ON -DBUILD_ASWIP=ON -DBUILD_SWAN=ON -DBUILD_PUNSWAN=ON -DBUILD_LIBADCIRC_STATIC=ON -DBUILD_LIBADCIRC_SHARED=ON -DBUILD_UTILITIES=ON -DNETCDF_F90_INCLUDE_DIR=/usr/lib64/gfortran/modules -DENABLE_OUTPUT_NETCDF=ON &&  make -j4

  build_cmake_without_netcdf:
    <<: *default_env
    steps:
      - checkout
      - run:
          name: Build ADCIRC without external libraries using CMake
          command: source /opt/spack-environment/activate.sh && mkdir build && cd build && cmake .. -DCMAKE_C_COMPILER=icx -DCMAKE_CXX_COMPILER=icx -DCMAKE_Fortran_COMPILER=ifx -DBUILD_ADCIRC=ON -DBUILD_PADCIRC=ON -DBUILD_ADCSWAN=ON -DBUILD_PADCSWAN=ON -DBUILD_ADCPREP=ON -DBUILD_UTILITIES=ON -DBUILD_ASWIP=ON -DBUILD_SWAN=ON -DBUILD_PUNSWAN=ON -DBUILD_LIBADCIRC_STATIC=ON -DBUILD_LIBADCIRC_SHARED=ON -DBUILD_UTILITIES=ON -DCMAKE_Fortran_FLAGS_RELEASE="-O2 -fp-model=precise" -DCMAKE_C_FLAGS_RELEASE="-O2 -DNDEBUG -fp-model=precise" -DCMAKE_CXX_FLAGS_RELEASE="-O2 -DNDEBUG -fp-model=precise" -G Ninja &&  ninja
      - save_cache:
          key: adcirc-base-{{ arch }}-{{ .Environment.CIRCLE_SHA1 }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}
          paths:
            - /home/adcirc/project

  build_cmake_with_netcdf:
    <<: *default_env
    steps:
      - checkout
      - run:
          name: Build ADCIRC with netCDF using CMake
          command: source /opt/spack-environment/activate.sh && mkdir build && cd build && cmake .. -DCMAKE_C_COMPILER=icx -DCMAKE_CXX_COMPILER=icx -DCMAKE_Fortran_COMPILER=ifx -DBUILD_ADCIRC=ON -DBUILD_PADCIRC=ON -DBUILD_ADCSWAN=ON -DBUILD_PADCSWAN=ON -DBUILD_ADCPREP=ON -DBUILD_UTILITIES=ON -DBUILD_ASWIP=ON -DBUILD_SWAN=ON -DBUILD_PUNSWAN=ON -DBUILD_LIBADCIRC_STATIC=ON -DBUILD_LIBADCIRC_SHARED=ON -DENABLE_OUTPUT_NETCDF=ON -DBUILD_UTILITIES=ON -DCMAKE_Fortran_FLAGS_RELEASE="-O2 -fp-model=precise" -DCMAKE_C_FLAGS_RELEASE="-O2 -DNDEBUG -fp-model=precise" -DCMAKE_CXX_FLAGS_RELEASE="-O2 -DNDEBUG -fp-model=precise" -DNETCDF_F90_ROOT=$NETCDF_FORTRAN_HOME -DNETCDFHOME=$NETCDFHOME -G Ninja && ninja
      - save_cache:
          key: adcirc-netcdf-{{ arch }}-{{ .Environment.CIRCLE_SHA1 }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}
          paths:
            - /home/adcirc/project

  build_cmake_with_netcdf_and_xdmf:
    <<: *default_env
    steps:
      - checkout
      - run:
          name: Build ADCIRC with netCDF and XDMF using CMake
          command: source /opt/spack-environment/activate.sh && mkdir build && cd build && cmake .. -DCMAKE_C_COMPILER=icx -DCMAKE_CXX_COMPILER=icx -DCMAKE_Fortran_COMPILER=ifx -DBUILD_ADCIRC=ON -DBUILD_PADCIRC=ON -DBUILD_ADCSWAN=ON -DBUILD_PADCSWAN=ON -DBUILD_ADCPREP=ON -DBUILD_UTILITIES=ON -DBUILD_ASWIP=ON -DBUILD_SWAN=ON -DBUILD_PUNSWAN=ON -DBUILD_LIBADCIRC_STATIC=ON -DBUILD_LIBADCIRC_SHARED=ON -DENABLE_OUTPUT_NETCDF=ON -DENABLE_OUTPUT_XDMF=ON -DBUILD_UTILITIES=ON -DCMAKE_Fortran_FLAGS_RELEASE="-O2 -fp-model=precise" -DCMAKE_C_FLAGS_RELEASE="-O2 -DNDEBUG -fp-model=precise" -DCMAKE_CXX_FLAGS_RELEASE="-O2 -DNDEBUG -fp-model=precise" -DNETCDF_F90_ROOT=$NETCDF_FORTRAN_HOME -DNETCDFHOME=$NETCDFHOME -DXDMFHOME=$XDMFHOME -DHDF5_ROOT=$HDF5HOME -G Ninja && ninja

  build_cmake_with_netcdf_and_xdmf_grib:
    <<: *default_env
    steps:
      - checkout
      - run:
          name: Build ADCIRC with Grib, netCDF, and XDMF using CMake
          command: source /opt/spack-environment/activate.sh && mkdir build && cd build && cmake .. -DCMAKE_C_COMPILER=icx -DCMAKE_CXX_COMPILER=icx -DCMAKE_Fortran_COMPILER=ifx -DBUILD_ADCIRC=ON -DBUILD_PADCIRC=ON -DBUILD_ADCSWAN=ON -DBUILD_PADCSWAN=ON -DBUILD_ADCPREP=ON -DBUILD_UTILITIES=ON -DBUILD_ASWIP=ON -DBUILD_SWAN=ON -DBUILD_PUNSWAN=ON -DBUILD_LIBADCIRC_STATIC=ON -DBUILD_LIBADCIRC_SHARED=ON -DENABLE_OUTPUT_NETCDF=ON -DENABLE_OUTPUT_XDMF=ON -DBUILD_UTILITIES=ON -DENABLE_DATETIME=ON -DENABLE_GRIB2=ON -DCMAKE_Fortran_FLAGS_RELEASE="-O2 -fp-model=precise" -DCMAKE_C_FLAGS_RELEASE="-O2 -DNDEBUG -fp-model=precise" -DCMAKE_CXX_FLAGS_RELEASE="-O2 -DNDEBUG -fp-model=precise" -DNETCDF_F90_ROOT=$NETCDF_FORTRAN_HOME -DNETCDFHOME=$NETCDFHOME -DXDMFHOME=$XDMFHOME -G Ninja && ninja
      - save_cache:
          key: adcirc-grib2-{{ arch }}-{{ .Environment.CIRCLE_SHA1 }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}
          paths:
            - /home/adcirc/project

  test_base:
    <<: *default_env
    parameters:
      test_name:
        description: "Name of test job to be run"
        default: "adcirc_quarterannular-2d"
        type: string
    steps:
      - restore_cache:
          name: Restore base build cache
          keys:
            - adcirc-base-{{ arch }}-{{ .Environment.CIRCLE_SHA1 }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}
      - run:
          name: Get test data from AWS, <<parameters.test_name>>
          command: source /opt/spack-environment/activate.sh && aws s3 --no-sign-request cp s3://adcirc-testsuite/adcirc/<<pipeline.parameters.ci-version>>/<<parameters.test_name>>.tar.gz /home/adcirc/adcirc_testsuite.tar.gz
      - run:
          name: Unpack Tests
          command: mkdir /home/adcirc/adcirc-cg-testsuite && cd /home/adcirc/adcirc-cg-testsuite && tar -xvzf /home/adcirc/adcirc_testsuite.tar.gz
      - run:
          name: Run Test <<parameters.test_name>>
          command: source /opt/spack-environment/activate.sh && cd /home/adcirc/adcirc-cg-testsuite && ./RunSingleTest.sh /home/adcirc/project/build <<parameters.test_name>>
          no_output_timeout: 7200
      - run:
          name: Store log artifacts
          command: |
            mkdir -p /tmp/artifacts
            find /home/adcirc/adcirc-cg-testsuite/adcirc*/<<parameters.test_name>> -name "*.log" -exec cp {} /tmp/artifacts/. \;
          when: always
      - run:
          name: Store graphics artifacts
          command: |
            mkdir -p /tmp/artifacts
            find /home/adcirc/adcirc-cg-testsuite/adcirc*/<<parameters.test_name>> -name "*.png" -exec cp {} /tmp/artifacts/. \;
          when: always
      - store_artifacts:
          path: /tmp/artifacts

  test_netcdf:
    <<: *default_env
    parameters:
      test_name:
        description: "Name of test job to be run"
        default: "adcirc_quarterannular-2d"
        type: string
    steps:
      - restore_cache:
          name: Restore netcdf build cache
          keys:
            - adcirc-netcdf-{{ arch }}-{{ .Environment.CIRCLE_SHA1 }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}
      - run:
          name: Get test data from AWS, <<parameters.test_name>>
          command: source /opt/spack-environment/activate.sh && aws s3 --no-sign-request cp s3://adcirc-testsuite/adcirc/<<pipeline.parameters.ci-version>>/<<parameters.test_name>>.tar.gz /home/adcirc/adcirc_testsuite.tar.gz
      - run:
          name: Unpack Tests
          command: mkdir /home/adcirc/adcirc-cg-testsuite && cd /home/adcirc/adcirc-cg-testsuite && tar -xvzf /home/adcirc/adcirc_testsuite.tar.gz
      - run:
          name: <<parameters.test_name>>
          command: source /opt/spack-environment/activate.sh && cd /home/adcirc/adcirc-cg-testsuite && ./RunSingleTest.sh /home/adcirc/project/build <<parameters.test_name>>
          no_output_timeout: 7200
      - run:
          name: Store log artifacts
          command: |
            mkdir -p /tmp/artifacts
            find /home/adcirc/adcirc-cg-testsuite/adcirc*/<<parameters.test_name>> -name "*.log" -exec cp {} /tmp/artifacts/. \;
          when: always
      - run:
          name: Store graphics artifacts
          command: |
            mkdir -p /tmp/artifacts
            find /home/adcirc/adcirc-cg-testsuite/adcirc*/<<parameters.test_name>> -name "*.png" -exec cp {} /tmp/artifacts/. \;
          when: always
      - store_artifacts:
          path: /tmp/artifacts

  test_grib2:
    <<: *default_env
    parameters:
      test_name:
        description: "Name of test job to be run"
        default: "adcirc_quarterannular-2d"
        type: string
    steps:
      - restore_cache:
          name: Restore grib2 build cache
          keys:
            - adcirc-grib2-{{ arch }}-{{ .Environment.CIRCLE_SHA1 }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}
      - run:
          name: Get test data from AWS, <<parameters.test_name>>
          command: source /opt/spack-environment/activate.sh && aws s3 --no-sign-request cp s3://adcirc-testsuite/adcirc/<<pipeline.parameters.ci-version>>/<<parameters.test_name>>.tar.gz /home/adcirc/adcirc_testsuite.tar.gz
      - run:
          name: Unpack Tests
          command: mkdir /home/adcirc/adcirc-cg-testsuite && cd /home/adcirc/adcirc-cg-testsuite && tar -xvzf /home/adcirc/adcirc_testsuite.tar.gz
      - run:
          name: <<parameters.test_name>>
          command: source /opt/spack-environment/activate.sh && cd /home/adcirc/adcirc-cg-testsuite && ./RunSingleTest.sh /home/adcirc/project/build <<parameters.test_name>>
          no_output_timeout: 7200
      - run:
          name: Store log artifacts
          command: |
            mkdir -p /tmp/artifacts
            find /home/adcirc/adcirc-cg-testsuite/adcirc*/<<parameters.test_name>> -name "*.log" -exec cp {} /tmp/artifacts/. \;
          when: always
      - run:
          name: Store graphics artifacts
          command: |
            mkdir -p /tmp/artifacts
            find /home/adcirc/adcirc-cg-testsuite/adcirc*/<<parameters.test_name>> -name "*.png" -exec cp {} /tmp/artifacts/. \;
          when: always
      - store_artifacts:
          path: /tmp/artifacts

# ##############################
# Workflows in the CI process
# ##############################
workflows:
  version: 2
  build_and_test:
    jobs:
      - build_legacy_without_netcdf
      - build_legacy_with_netcdf
      - build_legacy_with_netcdf_and_xdmf
      - build_cmake_without_netcdf_gcc
      - build_cmake_with_netcdf_gcc
      - build_cmake_with_netcdf_and_xdmf
      - build_cmake_without_netcdf
      - build_cmake_with_netcdf
      - build_cmake_with_netcdf_and_xdmf_grib
      - test_base:
            requires:
                - build_cmake_without_netcdf
            matrix:
                parameters:
                    test_name:
                        - adcirc_quarterannular-2d
                        - adcirc_quarterannular-2d-parallel
                        - adcirc_quarterannular-2d-hotstart
                        - adcirc_quarterannular-2d-parallel-hotstart
                        - adcirc_quarterannular-2d-parallel-writer
                        - adcirc_swan_apes_irene
      - test_netcdf:
            requires:
                - build_cmake_with_netcdf
            matrix:
                parameters:
                    test_name:
                        - adcirc_quarterannular-2d-netcdf
                        - adcirc_quarterannular-2d-netcdf-hotstart
                        - adcirc_quarterannular-2d-parallel-netcdf
                        - adcirc_quarterannular-2d-parallel-netcdf-hotstart
                        - adcirc_quarterannular-2d-parallel-netcdf-writer
                        - adcirc_katrina-2d
                        - adcirc_katrina-2d-nws13
                        - adcirc_katrina-2d-nws13-parallel
                        - adcirc_katrina-2d-parallel
                        - adcirc_nws30_wlcorrection
                        - adcirc_nws30_wlcorrection-parallel
                        - adcirc_slopingbeach_vew1d-parallel
                        - adcirc_subgrid-serial
                        - adcirc_subgrid-parallel
                        - adcirc_swan_apes_irene-parallel
                        - adcirc_global-tide-2d-full-tip-JPL-emphemerides-parallel
                        - adcirc_global-tide-2d-full-tip-analytical-serial
      - test_grib2:
            requires:
                - build_cmake_with_netcdf_and_xdmf_grib
            matrix:
                parameters:
                    test_name:
                        - adcirc_alaska_ice-2d
                        - adcirc_apes
                        - adcirc_apes-parallel
                        - adcirc_global-alidisp+buoyancy-2d-parallel
                        - adcirc_global_nws10-2d
                        - adcirc_global-tide-2d
                        - adcirc_global-tide+surge-2d
                        - adcirc_global-tide+surge-netcdfsal-2d
                        - adcirc_ideal_channel-2d-parallel
                        - adcirc_ideal_channel-woffset-2d-parallel
                        - adcirc_internal_overflow
                        - adcirc_internal_overflow-parallel
                        - adcirc_rivers
                        - adcirc_rivers-parallel
                        - adcirc_shinnecock_inlet
                        - adcirc_shinnecock_inlet-parallel
                        - adcirc_timevaryingweirs-parallel
                        - adcirc_baroclinic_2d_serial
                        - adcirc_baroclinic_2d_parallel
                        - adcirc_baroclinic_internaltide_2d
                        - adcirc_global-tide-2d-full-tip-JPL-emphemerides-serial
                        - adcirc_global-tide-2d-full-tip-analytical-parallel
                        - adcirc_global-nws14-inset-parallel
