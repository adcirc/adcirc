# #######################################################################
# ADCIRC CircleCI Yaml
#
# Written By: Zach Cobell
#
# Generated for: CircleCI v2.1
#
# This yaml runs a series of build tests
# and acceptance tests used to ensure the
# ADCIRC code is throughly checked before 
# accepting code into the main branch
#
# #######################################################################
version: 2.1

# #############################
# Aliases for the environments
# #############################
default_env: &default_env
    docker:
      - image: zcobell/adcirc-ci-container:latest
    environment:
      BASH_ENV: /etc/environment

default_env_gcc: &default_env_gcc
    docker:
      - image: zcobell/adcirc-ci-container:latest-gcc
    environment:
      BASH_ENV: /etc/environment

# #######################################
# Jobs that will be run in the workflow
# #######################################
jobs:
  build_legacy_without_netcdf:
      <<: *default_env
      steps:
        - checkout
        - run: 
            name: Configure SWAN for legacy makefile
            command: cd work ; cp ../thirdparty/swan/macros.inc.gfortran ../thirdparty/swan/macros.inc
        - run: 
            name: Build ADCIRC without external libraries using legacy makefile
            command: cd work ; make compiler=circleci adcirc padcirc adcprep adccmp inflate hot2asc hstime aswip p15 build13 build12 libadc adcswan padcswan

  build_legacy_with_netcdf:
      <<: *default_env
      steps:
        - checkout
        - run: 
            name: Configure SWAN for legacy makefile
            command: cd work ; cp ../thirdparty/swan/macros.inc.circleci ../thirdparty/swan/macros.inc
        - run: 
            name: Build ADCIRC with netCDF using legacy makefile
            command: cd work ; make compiler=circleci NETCDF=enable NETCDF4=enable NETCDF4_COMPRESSION=enable NETCDFHOME=$NETCDF_FORTRAN_HOME HDF5HOME=$HDF5HOME NETCDF_C_HOME=$NETCDFHOME adcirc padcirc adcprep adccmp inflate hot2asc hstime aswip p15 build13 build12 libadc adcswan padcswan

  build_legacy_with_netcdf_and_xdmf:
      <<: *default_env
      steps:
        - checkout
        - run: 
            name: Configure SWAN for legacy makefile
            command: cd work ; cp ../thirdparty/swan/macros.inc.gfortran ../thirdparty/swan/macros.inc
        - run: 
            name: Build ADCIRC with netCDF and XDMF using legacy makefile
            command: cd work ; make compiler=circleci NETCDF=enable NETCDF4=enable NETCDF4_COMPRESSION=enable NETCDFHOME=$NETCDF_FORTRAN_HOME HDF5HOME=$HDF5HOME NETCDF_C_HOME=$NETCDFHOME XDMF=enable XDMFHOME=/opt/xdmf adcirc padcirc adcprep adccmp inflate hot2asc hstime aswip p15 build13 build12 libadc adcswan padcswan 

  test_suite_data:
      <<: *default_env
      steps:
        - run:
           name: Retrieve Test Suite
           command: git clone --depth=1 -b main https://github.com/adcirc/adcirc-cg-testsuite.git /root/adcirc-cg-testsuite
        - save_cache:
            key: adcirc-test-suite-data-{{ arch }}-{{ .Environment.CIRCLE_SHA1 }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}
            paths:
                - /root/adcirc-cg-testsuite

  build_cmake_without_netcdf_gcc:
      <<: *default_env_gcc
      steps:
        - checkout
        - run:
            name: Build ADCIRC without external libraries using CMake
            command: mkdir build ; cd build ; cmake .. -DBUILD_ADCIRC=ON -DBUILD_PADCIRC=ON -DBUILD_ADCSWAN=ON -DBUILD_PADCSWAN=ON -DBUILD_ADCPREP=ON -DBUILD_UTILITIES=ON -DBUILD_ASWIP=ON -DBUILD_SWAN=ON -DBUILD_PUNSWAN=ON -DBUILD_LIBADCIRC_STATIC=ON -DBUILD_LIBADCIRC_SHARED=ON -DBUILD_UTILITIES=ON; make -j4

  build_cmake_with_netcdf_gcc:
      <<: *default_env_gcc
      steps:
        - checkout
        - run:
            name: Build ADCIRC without external libraries using CMake
            command: mkdir build ; cd build ; cmake .. -DBUILD_ADCIRC=ON -DBUILD_PADCIRC=ON -DBUILD_ADCSWAN=ON -DBUILD_PADCSWAN=ON -DBUILD_ADCPREP=ON -DBUILD_UTILITIES=ON -DBUILD_ASWIP=ON -DBUILD_SWAN=ON -DBUILD_PUNSWAN=ON -DBUILD_LIBADCIRC_STATIC=ON -DBUILD_LIBADCIRC_SHARED=ON -DBUILD_UTILITIES=ON -DNETCDF_F90_INCLUDE_DIR=/usr/lib64/gfortran/modules -DENABLE_OUTPUT_NETCDF=ON; make -j4

  build_cmake_without_netcdf:
      <<: *default_env
      steps:
        - checkout 
        - run: 
            name: Build ADCIRC without external libraries using CMake
            command: mkdir build ; cd build ; cmake .. -DCMAKE_C_COMPILER=icx -DCMAKE_CXX_COMPILER=icx -DCMAKE_Fortran_COMPILER=ifx -DBUILD_ADCIRC=ON -DBUILD_PADCIRC=ON -DBUILD_ADCSWAN=ON -DBUILD_PADCSWAN=ON -DBUILD_ADCPREP=ON -DBUILD_UTILITIES=ON -DBUILD_ASWIP=ON -DBUILD_SWAN=ON -DBUILD_PUNSWAN=ON -DBUILD_LIBADCIRC_STATIC=ON -DBUILD_LIBADCIRC_SHARED=ON -DBUILD_UTILITIES=ON -DCMAKE_Fortran_FLAGS_RELEASE="-O2 -fp-model=precise" -DCMAKE_C_FLAGS_RELEASE="-O2 -DNDEBUG -fp-model=precise" -DCMAKE_CXX_FLAGS_RELEASE="-O2 -DNDEBUG -fp-model=precise"; make -j4
        - save_cache:
            key: adcirc-base-{{ arch }}-{{ .Environment.CIRCLE_SHA1 }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}
            paths: 
                - /root/project

  build_cmake_with_netcdf:
      <<: *default_env
      steps:
        - checkout
        - run: 
            name: Build ADCIRC with netCDF using CMake
            command: mkdir build ; cd build ; cmake .. -DCMAKE_C_COMPILER=icx -DCMAKE_CXX_COMPILER=icx -DCMAKE_Fortran_COMPILER=ifx -DBUILD_ADCIRC=ON -DBUILD_PADCIRC=ON -DBUILD_ADCSWAN=ON -DBUILD_PADCSWAN=ON -DBUILD_ADCPREP=ON -DBUILD_UTILITIES=ON -DBUILD_ASWIP=ON -DBUILD_SWAN=ON -DBUILD_PUNSWAN=ON -DBUILD_LIBADCIRC_STATIC=ON -DBUILD_LIBADCIRC_SHARED=ON -DENABLE_OUTPUT_NETCDF=ON -DBUILD_UTILITIES=ON -DCMAKE_Fortran_FLAGS_RELEASE="-O2 -fp-model=precise" -DCMAKE_C_FLAGS_RELEASE="-O2 -DNDEBUG -fp-model=precise" -DCMAKE_CXX_FLAGS_RELEASE="-O2 -DNDEBUG -fp-model=precise" -DNETCDF_F90_ROOT=$NETCDF_FORTRAN_HOME -DNETCDFHOME=$NETCDFHOME; make -j4
        - save_cache:
            key: adcirc-netcdf-{{ arch }}-{{ .Environment.CIRCLE_SHA1 }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}
            paths: 
                - /root/project

  build_cmake_with_netcdf_and_xdmf:
      <<: *default_env
      steps:
        - checkout
        - run: 
            name: Build ADCIRC with netCDF and XDMF using CMake
            command: mkdir build ; cd build ; cmake .. -DCMAKE_C_COMPILER=icx -DCMAKE_CXX_COMPILER=icx -DCMAKE_Fortran_COMPILER=ifx -DBUILD_ADCIRC=ON -DBUILD_PADCIRC=ON -DBUILD_ADCSWAN=ON -DBUILD_PADCSWAN=ON -DBUILD_ADCPREP=ON -DBUILD_UTILITIES=ON -DBUILD_ASWIP=ON -DBUILD_SWAN=ON -DBUILD_PUNSWAN=ON -DBUILD_LIBADCIRC_STATIC=ON -DBUILD_LIBADCIRC_SHARED=ON -DENABLE_OUTPUT_NETCDF=ON -DENABLE_OUTPUT_XDMF=ON -DBUILD_UTILITIES=ON -DCMAKE_Fortran_FLAGS_RELEASE="-O2 -fp-model=precise" -DCMAKE_C_FLAGS_RELEASE="-O2 -DNDEBUG -fp-model=precise" -DCMAKE_CXX_FLAGS_RELEASE="-O2 -DNDEBUG -fp-model=precise" -DNETCDF_F90_ROOT=$NETCDF_FORTRAN_HOME -DNETCDFHOME=$NETCDFHOME -DXDMFHOME=$XDMFHOME -DHDF5_ROOT=$HDF5HOME; make -j4

  build_cmake_with_netcdf_and_xdmf_grib:
      <<: *default_env
      steps:
        - checkout
        - run: 
            name: Build ADCIRC with Grib, netCDF, and XDMF using CMake
            command: mkdir build ; cd build ; cmake .. -DCMAKE_C_COMPILER=icx -DCMAKE_CXX_COMPILER=icx -DCMAKE_Fortran_COMPILER=ifx -DBUILD_ADCIRC=ON -DBUILD_PADCIRC=ON -DBUILD_ADCSWAN=ON -DBUILD_PADCSWAN=ON -DBUILD_ADCPREP=ON -DBUILD_UTILITIES=ON -DBUILD_ASWIP=ON -DBUILD_SWAN=ON -DBUILD_PUNSWAN=ON -DBUILD_LIBADCIRC_STATIC=ON -DBUILD_LIBADCIRC_SHARED=ON -DENABLE_OUTPUT_NETCDF=ON -DENABLE_OUTPUT_XDMF=ON -DBUILD_UTILITIES=ON -DENABLE_DATETIME=ON -DENABLE_GRIB2=ON -DCMAKE_Fortran_FLAGS_RELEASE="-O2 -fp-model=precise" -DCMAKE_C_FLAGS_RELEASE="-O2 -DNDEBUG -fp-model=precise" -DCMAKE_CXX_FLAGS_RELEASE="-O2 -DNDEBUG -fp-model=precise" -DNETCDF_F90_ROOT=$NETCDF_FORTRAN_HOME -DNETCDFHOME=$NETCDFHOME -DXDMFHOME=$XDMFHOME; make -j4
        - save_cache:
            key: adcirc-grib2-{{ arch }}-{{ .Environment.CIRCLE_SHA1 }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}
            paths: 
                - /root/project

  test_base:
      <<: *default_env
      parameters:
          test_name:
              description: "Name of test job to be run"
              default: "adcirc_quarterannular-2d"
              type: string
      steps:
        - restore_cache:
            name: Restore test cache
            keys:
            - adcirc-test-suite-data-{{ arch }}-{{ .Environment.CIRCLE_SHA1 }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        - restore_cache:
            name: Restore base build cache
            keys:
            - adcirc-base-{{ arch }}-{{ .Environment.CIRCLE_SHA1 }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        - run: 
            name: <<parameters.test_name>>
            command: cd /root/adcirc-cg-testsuite ; ./RunSingleTest.sh /root/project/build <<parameters.test_name>>
            no_output_timeout: 7200
        - run:
            name: Store log artifacts
            command: |
              mkdir -p /tmp/artifacts
              find /root/adcirc-cg-testsuite/adcirc*/<<parameters.test_name>> -name "*.log" -exec cp {} /tmp/artifacts/. \;
            when: always
        - run:
            name: Store graphics artifacts
            command: |
              mkdir -p /tmp/artifacts
              find /root/adcirc-cg-testsuite/adcirc*/<<parameters.test_name>> -name "*.png" -exec cp {} /tmp/artifacts/. \;
            when: always
        - store_artifacts: 
            path: /tmp/artifacts
  test_netcdf:
      <<: *default_env
      parameters:
          test_name:
              description: "Name of test job to be run"
              default: "adcirc_quarterannular-2d"
              type: string
      steps:
        - restore_cache:
            name: Restore test cache
            keys:
            - adcirc-test-suite-data-{{ arch }}-{{ .Environment.CIRCLE_SHA1 }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        - restore_cache:
            name: Restore netcdf build cache
            keys:
            - adcirc-netcdf-{{ arch }}-{{ .Environment.CIRCLE_SHA1 }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        - run: 
            name: <<parameters.test_name>>
            command: cd /root/adcirc-cg-testsuite ; ./RunSingleTest.sh /root/project/build <<parameters.test_name>>
            no_output_timeout: 7200
        - run:
            name: Store log artifacts
            command: |
              mkdir -p /tmp/artifacts
              find /root/adcirc-cg-testsuite/adcirc*/<<parameters.test_name>> -name "*.log" -exec cp {} /tmp/artifacts/. \;
            when: always
        - run:
            name: Store graphics artifacts
            command: |
              mkdir -p /tmp/artifacts
              find /root/adcirc-cg-testsuite/adcirc*/<<parameters.test_name>> -name "*.png" -exec cp {} /tmp/artifacts/. \;
            when: always
        - store_artifacts: 
           path: /tmp/artifacts
  test_grib2:
      <<: *default_env
      parameters:
          test_name:
              description: "Name of test job to be run"
              default: "adcirc_quarterannular-2d"
              type: string
      steps:
        - restore_cache:
            name: Restore test cache
            keys:
            - adcirc-test-suite-data-{{ arch }}-{{ .Environment.CIRCLE_SHA1 }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        - restore_cache:
            name: Restore grib2 build cache
            keys:
            - adcirc-grib2-{{ arch }}-{{ .Environment.CIRCLE_SHA1 }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        - run: 
            name: <<parameters.test_name>>
            command: cd /root/adcirc-cg-testsuite ; ./RunSingleTest.sh /root/project/build <<parameters.test_name>>
            no_output_timeout: 7200
        - run:
            name: Store log artifacts
            command: |
              mkdir -p /tmp/artifacts
              find /root/adcirc-cg-testsuite/adcirc*/<<parameters.test_name>> -name "*.log" -exec cp {} /tmp/artifacts/. \;
            when: always
        - run:
            name: Store graphics artifacts
            command: |
              mkdir -p /tmp/artifacts
              find /root/adcirc-cg-testsuite/adcirc*/<<parameters.test_name>> -name "*.png" -exec cp {} /tmp/artifacts/. \;
            when: always
        - store_artifacts: 
           path: /tmp/artifacts
# ##############################
# Workflows in the CI process
# ##############################
workflows:
  version: 2.1
  build_and_test:
    jobs:
      - test_suite_data
      - build_legacy_without_netcdf
      - build_legacy_with_netcdf
      - build_legacy_with_netcdf_and_xdmf
      - build_cmake_without_netcdf_gcc
      - build_cmake_with_netcdf_gcc
      - build_cmake_with_netcdf_and_xdmf
      - build_cmake_without_netcdf
      - build_cmake_with_netcdf
      - build_cmake_with_netcdf_and_xdmf_grib
      - test_base:
            requires: 
                - test_suite_data
                - build_cmake_without_netcdf
            matrix:
                parameters:
                    test_name:
                        - adcirc_quarterannular-2d
                        - adcirc_quarterannular-2d-parallel
                        - adcirc_quarterannular-2d-hotstart
                        - adcirc_quarterannular-2d-parallel-hotstart
                        - adcirc_quarterannular-2d-parallel-writer
                        - adcirc_swan_apes_irene
      - test_netcdf:
            requires: 
                - test_suite_data
                - build_cmake_with_netcdf
            matrix:
                parameters:
                    test_name:
                        - adcirc_quarterannular-2d-netcdf
                        - adcirc_quarterannular-2d-netcdf-hotstart
                        - adcirc_quarterannular-2d-parallel-netcdf
                        - adcirc_quarterannular-2d-parallel-netcdf-hotstart
                        - adcirc_quarterannular-2d-parallel-netcdf-writer
                        - adcirc_katrina-2d
                        - adcirc_katrina-2d-nws13
                        - adcirc_katrina-2d-nws13-parallel
                        - adcirc_katrina-2d-parallel
                        - adcirc_nws30_wlcorrection
                        - adcirc_nws30_wlcorrection-parallel
                        - adcirc_slopingbeach_vew1d-parallel
                        - adcirc_subgrid-serial
                        - adcirc_subgrid-parallel
                        - adcirc_swan_apes_irene-parallel
      - test_grib2:
            requires: 
                - test_suite_data
                - build_cmake_with_netcdf_and_xdmf_grib
            matrix:
                parameters:
                    test_name:
                        - adcirc_alaska_ice-2d
                        - adcirc_apes
                        - adcirc_apes-parallel
                        - adcirc_global-alidisp+buoyancy-2d-parallel
                        - adcirc_global_nws10-2d
                        - adcirc_global-tide-2d
                        - adcirc_global-tide+surge-2d
                        - adcirc_global-tide+surge-netcdfsal-2d
                        - adcirc_ideal_channel-2d-parallel
                        - adcirc_ideal_channel-woffset-2d-parallel
                        - adcirc_internal_overflow
                        - adcirc_internal_overflow-parallel
                        - adcirc_rivers
                        - adcirc_rivers-parallel
                        - adcirc_shinnecock_inlet
                        - adcirc_shinnecock_inlet-parallel
                        - adcirc_timevaryingweirs-parallel
                        - adcirc_baroclinic_2d_serial
                        - adcirc_baroclinic_2d_parallel

