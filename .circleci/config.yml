########################################################################
# ADCIRC CircleCI Yaml
#
# Written By: Zach Cobell
#
# Generated for: CircleCI v2.1
#
# This yaml runs a series of build tests
# and acceptance tests used to ensure the
# ADCIRC code is throughly checked before 
# accepting code into the master branch
#
########################################################################
version: 2.1

#...CodeCov Orb
orbs:
  codecov: codecov/codecov@1.0.5

#...Aliases used to shorthand this job script
default_env: &default_env
    docker:
      - image: zcobell/adcirc_ci_development:latest
    environment:
      BASH_ENV: /etc/environment

default_testenv: &default_testenv
     run:
       name: Retrieve Test Suite
       command: git clone --depth=1 -b v56 https://github.com/adcirc/adcirc-cg-testsuite.git /root/adcirc-cg-testsuite

cache_key_base: &cache_key_base
      key: adcirc-base-{{ arch }}-{{ .Environment.CIRCLE_SHA1 }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}

get_cache_base: &get_cache_base
     restore_cache:
         <<: *cache_key_base

cache_key_netcdf: &cache_key_netcdf
      key: adcirc-netcdf-{{ arch }}-{{ .Environment.CIRCLE_SHA1 }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}

get_cache_netcdf: &get_cache_netcdf
     restore_cache:
         <<: *cache_key_netcdf

cache_key_grib2: &cache_key_grib2
      key: adcirc-grib2-{{ arch }}-{{ .Environment.CIRCLE_SHA1 }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}

get_cache_grib2: &get_cache_grib2
     restore_cache:
         <<: *cache_key_grib2

upload_coverage: &upload_coverage
    codecov/upload

#...List of jobs in the workflow
jobs:
  build_legacy_without_netcdf:
      <<: *default_env
      steps:
        - checkout
        - run: 
            name: Configure SWAN for legacy makefile
            command: cd work ; cp ../thirdparty/swan/macros.inc.gfortran ../thirdparty/swan/macros.inc
        - run: 
            name: Build ADCIRC without external libraries using legacy makefile
            command: cd work ; make compiler=circleci adcirc padcirc adcprep adccmp inflate hot2asc hstime aswip p15 build13 build12 libadc adcswan padcswan
  build_legacy_with_netcdf:
      <<: *default_env
      steps:
        - checkout
        - run: 
            name: Configure SWAN for legacy makefile
            command: cd work ; cp ../thirdparty/swan/macros.inc.circleci ../thirdparty/swan/macros.inc
        - run: 
            name: Build ADCIRC with netCDF using legacy makefile
            command: cd work ; make compiler=circleci NETCDF=enable NETCDF4=enable NETCDF4_COMPRESSION=enable NETCDFHOME=$NETCDF_FORTRAN_HOME HDF5HOME=$HDF5HOME NETCDF_C_HOME=$NETCDFHOME adcirc padcirc adcprep adccmp inflate hot2asc hstime aswip p15 build13 build12 libadc adcswan padcswan
  build_legacy_with_netcdf_and_xdmf:
      <<: *default_env
      steps:
        - checkout
        - run: 
            name: Configure SWAN for legacy makefile
            command: cd work ; cp ../thirdparty/swan/macros.inc.gfortran ../thirdparty/swan/macros.inc
        - run: 
            name: Build ADCIRC with netCDF and XDMF using legacy makefile
            command: cd work ; make compiler=circleci NETCDF=enable NETCDF4=enable NETCDF4_COMPRESSION=enable NETCDFHOME=$NETCDF_FORTRAN_HOME HDF5HOME=$HDF5HOME NETCDF_C_HOME=$NETCDFHOME XDMF=enable XDMFHOME=/opt/xdmf adcirc padcirc adcprep adccmp inflate hot2asc hstime aswip p15 build13 build12 libadc adcswan padcswan 
  build_cmake_without_netcdf:
      <<: *default_env
      steps:
        - checkout
        - *default_testenv
        - run: 
            name: Build ADCIRC without external libraries using CMake
            command: mkdir build ; cd build ; cmake .. -DCMAKE_C_COMPILER=icx -DCMAKE_CXX_COMPILER=icx -DCMAKE_Fortran_COMPILER=ifx -DBUILD_ADCIRC=ON -DBUILD_PADCIRC=ON -DBUILD_ADCSWAN=ON -DBUILD_PADCSWAN=ON -DBUILD_ADCPREP=ON -DBUILD_UTILITIES=ON -DBUILD_ASWIP=ON -DBUILD_SWAN=ON -DBUILD_PUNSWAN=ON -DBUILD_LIBADCIRC_STATIC=ON -DBUILD_LIBADCIRC_SHARED=ON -DBUILD_UTILITIES=ON -DCMAKE_Fortran_FLAGS_RELEASE="-O3 -fp-model=precise" -DCMAKE_C_FLAGS_RELEASE="-O3 -DNDEBUG -fp-model=precise" -DCMAKE_CXX_FLAGS_RELEASE="-O3 -DNDEBUG -fp-model=precise"; make -j4
        - save_cache:
            <<: *cache_key_base 
            paths: 
                - /root/project
                - /root/adcirc-cg-testsuite
  build_cmake_with_netcdf:
      <<: *default_env
      steps:
        - checkout
        - *default_testenv
        - run: 
            name: Build ADCIRC with netCDF using CMake
            command: mkdir build ; cd build ; cmake .. -DCMAKE_C_COMPILER=icx -DCMAKE_CXX_COMPILER=icx -DCMAKE_Fortran_COMPILER=ifx -DBUILD_ADCIRC=ON -DBUILD_PADCIRC=ON -DBUILD_ADCSWAN=ON -DBUILD_PADCSWAN=ON -DBUILD_ADCPREP=ON -DBUILD_UTILITIES=ON -DBUILD_ASWIP=ON -DBUILD_SWAN=ON -DBUILD_PUNSWAN=ON -DBUILD_LIBADCIRC_STATIC=ON -DBUILD_LIBADCIRC_SHARED=ON -DENABLE_OUTPUT_NETCDF=ON -DBUILD_UTILITIES=ON -DCMAKE_Fortran_FLAGS_RELEASE="-O3 -fp-model=precise" -DCMAKE_C_FLAGS_RELEASE="-O3 -DNDEBUG -fp-model=precise" -DCMAKE_CXX_FLAGS_RELEASE="-O3 -DNDEBUG -fp-model=precise" -DNETCDF_F90_ROOT=$NETCDF_FORTRAN_HOME -DNETCDFHOME=$NETCDFHOME; make -j4
        - save_cache:
            <<: *cache_key_netcdf
            paths: 
                - /root/project
                - /root/adcirc-cg-testsuite
  build_cmake_with_netcdf_and_xdmf:
      <<: *default_env
      steps:
        - checkout
        - run: 
            name: Build ADCIRC with netCDF and XDMF using CMake
            command: mkdir build ; cd build ; cmake .. -DCMAKE_C_COMPILER=icx -DCMAKE_CXX_COMPILER=icx -DCMAKE_Fortran_COMPILER=ifx -DBUILD_ADCIRC=ON -DBUILD_PADCIRC=ON -DBUILD_ADCSWAN=ON -DBUILD_PADCSWAN=ON -DBUILD_ADCPREP=ON -DBUILD_UTILITIES=ON -DBUILD_ASWIP=ON -DBUILD_SWAN=ON -DBUILD_PUNSWAN=ON -DBUILD_LIBADCIRC_STATIC=ON -DBUILD_LIBADCIRC_SHARED=ON -DENABLE_OUTPUT_NETCDF=ON -DENABLE_OUTPUT_XDMF=ON -DBUILD_UTILITIES=ON -DCMAKE_Fortran_FLAGS_RELEASE="-O3 -fp-model=precise" -DCMAKE_C_FLAGS_RELEASE="-O3 -DNDEBUG -fp-model=precise" -DCMAKE_CXX_FLAGS_RELEASE="-O3 -DNDEBUG -fp-model=precise" -DNETCDF_F90_ROOT=$NETCDF_FORTRAN_HOME -DNETCDFHOME=$NETCDFHOME -DXDMFHOME=$XDMFHOME; make -j4
  build_cmake_with_netcdf_and_xdmf_grib:
      <<: *default_env
      steps:
        - checkout
        - *default_testenv
        - run: 
            name: Build ADCIRC with Grib, netCDF, and XDMF using CMake
            command: mkdir build ; cd build ; cmake .. -DCMAKE_C_COMPILER=icx -DCMAKE_CXX_COMPILER=icx -DCMAKE_Fortran_COMPILER=ifx -DBUILD_ADCIRC=ON -DBUILD_PADCIRC=ON -DBUILD_ADCSWAN=ON -DBUILD_PADCSWAN=ON -DBUILD_ADCPREP=ON -DBUILD_UTILITIES=ON -DBUILD_ASWIP=ON -DBUILD_SWAN=ON -DBUILD_PUNSWAN=ON -DBUILD_LIBADCIRC_STATIC=ON -DBUILD_LIBADCIRC_SHARED=ON -DENABLE_OUTPUT_NETCDF=ON -DENABLE_OUTPUT_XDMF=ON -DBUILD_UTILITIES=ON -DENABLE_DATETIME=ON -DENABLE_GRIB2=ON -DCMAKE_Fortran_FLAGS_RELEASE="-O3 -fp-model=precise" -DCMAKE_C_FLAGS_RELEASE="-O3 -DNDEBUG -fp-model=precise" -DCMAKE_CXX_FLAGS_RELEASE="-O3 -DNDEBUG -fp-model=precise" -DNETCDF_F90_ROOT=$NETCDF_FORTRAN_HOME -DNETCDFHOME=$NETCDFHOME -DXDMFHOME=$XDMFHOME; make -j4
        - save_cache:
            <<: *cache_key_grib2 
            paths: 
                - /root/project
                - /root/adcirc-cg-testsuite
  test_base:
      <<: *default_env
      parameters:
          test_name:
              description: "Name of test job to be run"
              default: "adcirc_quarterannular-2d"
              type: string
      steps:
        - *get_cache_base
        - run: 
            name: <<parameters.test_name>>
            command: cd /root/adcirc-cg-testsuite ; ./RunSingleTest.sh /root/project/build adcirc/<<parameters.test_name>>
            no_output_timeout: 7200
        - run:
            name: Store artifacts
            command: |
              mkdir -p /tmp/artifacts
              find /root/adcirc-cg-testsuite/adcirc/<<parameters.test_name>> -name "*.log" -exec cp {} /tmp/artifacts/. \;
            when: on_fail
        - store_artifacts: 
           path: /tmp/artifacts
  test_netcdf:
      <<: *default_env
      parameters:
          test_name:
              description: "Name of test job to be run"
              default: "adcirc_quarterannular-2d"
              type: string
      steps:
        - *get_cache_netcdf
        - run: 
            name: <<parameters.test_name>>
            command: cd /root/adcirc-cg-testsuite ; ./RunSingleTest.sh /root/project/build adcirc/<<parameters.test_name>>
            no_output_timeout: 7200
        - run:
            name: Store artifacts
            command: |
              mkdir -p /tmp/artifacts
              find /root/adcirc-cg-testsuite/adcirc/<<parameters.test_name>> -name "*.log" -exec cp {} /tmp/artifacts/. \;
            when: on_fail
        - store_artifacts: 
           path: /tmp/artifacts
  test_grib2:
      <<: *default_env
      parameters:
          test_name:
              description: "Name of test job to be run"
              default: "adcirc_quarterannular-2d"
              type: string
      steps:
        - *get_cache_grib2
        - run: 
            name: <<parameters.test_name>>
            command: cd /root/adcirc-cg-testsuite ; ./RunSingleTest.sh /root/project/build adcirc/<<parameters.test_name>>
            no_output_timeout: 7200
        - run:
            name: Store artifacts
            command: |
              mkdir -p /tmp/artifacts
              find /root/adcirc-cg-testsuite/adcirc/<<parameters.test_name>> -name "*.log" -exec cp {} /tmp/artifacts/. \;
            when: on_fail
        - store_artifacts: 
           path: /tmp/artifacts
workflows:
  version: 2.1
  build_and_test:
    jobs:
      - build_cmake_with_netcdf_and_xdmf
      - build_cmake_without_netcdf
      - build_cmake_with_netcdf
      - build_legacy_without_netcdf
      - build_legacy_with_netcdf
      - build_legacy_with_netcdf_and_xdmf
      - build_cmake_with_netcdf_and_xdmf_grib
      - test_base:
            requires: 
                - build_cmake_without_netcdf
            matrix:
                parameters:
                    test_name:
                        - adcirc_quarterannular-2d
                        - adcirc_quarterannular-2d-parallel
                        - adcirc_quarterannular-2d-hotstart
                        - adcirc_quarterannular-2d-parallel-hotstart
                        - adcirc_quarterannular-2d-parallel-writer
      - test_netcdf:
            requires: 
                - build_cmake_with_netcdf
            matrix:
                parameters:
                    test_name:
                        - adcirc_quarterannular-2d-netcdf
                        - adcirc_quarterannular-2d-netcdf-hotstart
                        - adcirc_quarterannular-2d-parallel-netcdf
                        - adcirc_quarterannular-2d-parallel-netcdf-hotstart
                        - adcirc_quarterannular-2d-parallel-netcdf-writer
                        - adcirc_katrina-2d
                        - adcirc_katrina-2d-nws13
                        - adcirc_katrina-2d-nws13-parallel
                        - adcirc_katrina-2d-parallel
                        - adcirc_nws30_wlcorrection
                        - adcirc_nws30_wlcorrection-parallel
                        - adcirc_slopingbeach_vew1d-parallel
      - test_grib2:
            requires: 
                - build_cmake_with_netcdf_and_xdmf_grib
            matrix:
                parameters:
                    test_name:
                        - adcirc_alaska_ice-2d
                        - adcirc_apes
                        - adcirc_apes-parallel
                        - adcirc_global-alidisp+buoyancy-2d-parallel
                        - adcirc_global_nws10-2d
                        - adcirc_global-tide-2d
                        - adcirc_global-tide+surge-2d
                        - adcirc_global-tide+surge-netcdfsal-2d
                        - adcirc_ideal_channel-2d-parallel
                        - adcirc_ideal_channel-woffset-2d-parallel
                        - adcirc_internal_overflow
                        - adcirc_internal_overflow-parallel
                        - adcirc_rivers
                        - adcirc_rivers-parallel
                        - adcirc_shinnecock_inlet
                        - adcirc_shinnecock_inlet-parallel
                        - adcirc_timevaryingweirs-parallel
                        


