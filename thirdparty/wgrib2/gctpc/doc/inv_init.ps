%!PS-Adobe-3.0
%%BoundingBox: 54 72 558 720
%%Creator: Mozilla (NetScape) HTML->PS
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%Pages: 2
%%PageOrder: Ascend
%%Title: file:/sg2/csb/snelson/las5/gctpdoc/new/inv_init.html
%%EndComments
%%BeginProlog
[ /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
 /two /three /four /five /six /seven /eight /nine /colon /semicolon
 /less /equal /greater /question /at /A /B /C /D /E
 /F /G /H /I /J /K /L /M /N /O
 /P /Q /R /S /T /U /V /W /X /Y
 /Z /bracketleft /backslash /bracketright /asciicircum /underscore /quoteleft /a /b /c
 /d /e /f /g /h /i /j /k /l /m
 /n /o /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /c0126 /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /space /exclamdown /cent /sterling /currency /yen /brokenbar /section /dieresis /copyright
 /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf
 /threequarters /questiondown /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde
 /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
 /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
 /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave
 /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis] /isolatin1encoding exch def
/c { matrix currentmatrix currentpoint translate
     3 1 roll scale newpath 0 0 1 0 360 arc setmatrix } bind def
/F0
    /Times-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f0 { /F0 findfont exch scalefont setfont } bind def
/F1
    /Times-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f1 { /F1 findfont exch scalefont setfont } bind def
/F2
    /Times-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f2 { /F2 findfont exch scalefont setfont } bind def
/F3
    /Times-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f3 { /F3 findfont exch scalefont setfont } bind def
/F4
    /Courier findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f4 { /F4 findfont exch scalefont setfont } bind def
/F5
    /Courier-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f5 { /F5 findfont exch scalefont setfont } bind def
/F6
    /Courier-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f6 { /F6 findfont exch scalefont setfont } bind def
/F7
    /Courier-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f7 { /F7 findfont exch scalefont setfont } bind def
/rhc {
    {
        currentfile read {
	    dup 97 ge
		{ 87 sub true exit }
		{ dup 48 ge { 48 sub true exit } { pop } ifelse }
	    ifelse
	} {
	    false
	    exit
	} ifelse
    } loop
} bind def

/cvgray { % xtra_char npix cvgray - (string npix long)
    dup string
    0
    {
	rhc { cvr 4.784 mul } { exit } ifelse
	rhc { cvr 9.392 mul } { exit } ifelse
	rhc { cvr 1.824 mul } { exit } ifelse
	add add cvi 3 copy put pop
	1 add
	dup 3 index ge { exit } if
    } loop
    pop
    3 -1 roll 0 ne { rhc { pop } if } if
    exch pop
} bind def

/smartimage12rgb { % w h b [matrix] smartimage12rgb -
    /colorimage where {
	pop
	{ currentfile rowdata readhexstring pop }
	false 3
	colorimage
    } {
	exch pop 8 exch
	3 index 12 mul 8 mod 0 ne { 1 } { 0 } ifelse
	4 index
	6 2 roll
	{ 2 copy cvgray }
	image
	pop pop
    } ifelse
} def
/cshow { dup stringwidth pop 2 div neg 0 rmoveto show } bind def
/rshow { dup stringwidth pop neg 0 rmoveto show } bind def
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
12 f0 0 709.22 moveto
(February 1996) show
12 f2 0 680.84 moveto
(inv_init - Initializes inverse projection transformation parameters) show
12 f0 316.66 680.84 moveto
( ) show
18 f1 0 646.4 moveto
(SYNTAX) show
12 f0 0 616.71 moveto
(FUNCTION inv_init \(insys, inzone, inparm, indatum, fn27, fn83, iflg, inv_trans\) ) show
12 f4 0 589.44 moveto
(    long        insys;) show
12 f4 0 576.78 moveto
(    long        inzone;) show
12 f4 0 564.12 moveto
(    double      inparm[15];) show
12 f4 0 551.46 moveto
(    long        indatum;) show
12 f4 0 538.8 moveto
(    char        fn27[]; ) show
12 f4 0 526.14 moveto
(    char        fn83[];) show
12 f4 0 513.48 moveto
(    long       *iflg; ) show
12 f4 0 500.82 moveto
(    long       \(*inv_trans[MAXPROJ + 1]\)\(\);) show
18 f1 0 465.99 moveto
(PARAMETERS) show
18 f1 0 430.24 moveto
(insys \(input, long\)) show
12 f0 0 400.55 moveto
(Defines the input projection system. Refer to GCTP for valid codes. ) show
18 f1 0 366.11 moveto
(inzone \(input, long\)) show
12 f0 0 336.42 moveto
(Input zone for UTM and State Plane projection systems. For Southern Hemisphere UTM, use a negative) show
12 f0 0 323.04 moveto
(zone code. ) show
12 f2 54.4 323.04 moveto
(Inzone) show
12 f0 86.39 323.04 moveto
( will be ignored for all other projections. ) show
18 f1 0 288.6 moveto
(inparm \(input, double, length\(15\)\)) show
12 f0 0 258.91 moveto
(Array of fifteen projection parameters. These parameters are required to define each map projection.) show
12 f0 0 245.53 moveto
(\(See Appendix A\) ) show
18 f1 0 211.09 moveto
(indatum \(input, long\)) show
12 f0 0 181.4 moveto
(Input spheroid. This identifies the semi-major axis and eccentricity that is to be used in the) show
12 f0 0 168.02 moveto
(transformation process. Refer to GCTP for valid spheroid codes. If a negative code is entered, elements) show
12 f0 0 154.64 moveto
(1 and 2 of ) show
12 f2 51.32 154.64 moveto
(inparm) show
12 f0 85.98 154.64 moveto
( will be used for the semi-major and semi-minor axis \(See Appendix A\). ) show
18 f1 0 120.2 moveto
(fn27 \(input, character, length\(*\)\)) show
12 f0 0 90.51 moveto
(Name of the NAD 1927 parameter files for State Plane zone parameters. ) show
pagelevel restore
showpage
%%Page: 2 2
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
18 f1 0 703.16 moveto
(fn83 \(input, character, length\(*\)\)) show
12 f0 0 673.47 moveto
(Name of the NAD 1983 parameter files for State Plane zone parameters. ) show
18 f1 0 639.03 moveto
(iflg \(output, long\)) show
12 f0 0 609.34 moveto
(Error flag after transformation. The error number returned will correspond to the specific error. ) show
18 f1 0 574.9 moveto
(inv_trans \(output, long, length\(MAXPROJ + 1\)\)) show
12 f0 0 545.21 moveto
(Function pointer. The pointer to the appropriate inverse transformation function is returned in the array) show
12 f2 0 531.83 moveto
(inv_trans) show
12 f0 45.33 531.83 moveto
( at location ) show
12 f2 101.65 531.83 moveto
(insys) show
12 f0 125.65 531.83 moveto
(. For example, if ) show
12 f2 208.3 531.83 moveto
(insys) show
12 f0 232.3 531.83 moveto
( = TM \(see GCTP\), then the pointer to the function) show
12 f2 0 518.45 moveto
(tminv\(\)) show
12 f0 34.65 518.45 moveto
( would be returned in ) show
12 f2 140.29 518.45 moveto
(inv_trans) show
12 f0 185.62 518.45 moveto
([TM]. This can be used to call ) show
12 f2 333.59 518.45 moveto
(tmfor\(\)) show
12 f0 367.58 518.45 moveto
( in the following manner: ) show
12 f4 0 491.18 moveto
(     ) show
12 f6 36 491.18 moveto
(inv_trans) show
12 f4 100.8 491.18 moveto
([TM]\(x, y, &lon, &lat\);.) show
18 f1 0 456.35 moveto
(DESCRIPTION) show
12 f2 0 426.66 moveto
(inv_init\(\)) show
12 f0 44.66 426.66 moveto
( is used to initialize the proper inverse projection and to return the pointer to the proper inverse) show
12 f0 0 413.28 moveto
(transformation routine. ) show
18 f1 0 378.84 moveto
(RETURN VALUE) show
12 f2 0 349.15 moveto
(inv_init\(\)) show
12 f0 44.66 349.15 moveto
( has no return value.) show
pagelevel restore
showpage
%%EOF
